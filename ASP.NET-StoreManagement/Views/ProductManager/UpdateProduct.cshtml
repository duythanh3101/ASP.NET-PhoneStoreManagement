@model ASP.NET_StoreManagement.Models.Product

@{
    ViewBag.Title = "Cập nhật sản phẩm";
    Layout = "~/Views/Layout/AdminLayOut.cshtml";
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js"></script>
<script>tinymce.init({ selector: 'textarea' });</script>
<script>
    $(function () {
        $("#datepicker").datepicker();
    });
</script>

@using (Html.BeginForm("UpdateProduct", "ProductManager", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Product</h4>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <span style="color:red;">@Html.Raw(ViewBag.FirstMess as string) <br /> @Html.Raw(ViewBag.SecondMess as string) </span>
    @Html.Hidden("Id", Model.Id);
    <div class="form-group">
        @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UpdateDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @if (Model.UpdateDate != null)
            {
                @Html.TextBox("UpdateDate", Model.UpdateDate.Value.ToString("dd/MM/yyyy"), new { @class = "form-control", @id = "datepicker" })
                @Html.ValidationMessageFor(model => model.UpdateDate, "", new { @class = "text-danger" })

            }
            else
            {
                @Html.TextBoxFor(model => model.UpdateDate, new { @class = "form-control", @id = "datepicker" })
                @Html.ValidationMessageFor(model => model.UpdateDate, "", new { @class = "text-danger" })

            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Configuration, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Configuration, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Configuration, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <textarea name="Description">@Model.Description</textarea>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <input type="file" name="ImageFile" id="Image" /><br />
            <img src="@Url.Content("~/Content/HinhAnhSP/"+Model.Image)" width="250" height="150" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ChildImage1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <input type="file" name="ImageFile" id="Image" />
            <br />
            @*if (@Model.Image != null)
                {
                }*@
            <img src="@Url.Content("~/Content/HinhAnhSP/"+Model.ChildImage1)" width="250" height="150" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ChildImage2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <input type="file" name="ImageFile" id="Image" /><br />
            <img src="@Url.Content("~/Content/HinhAnhSP/"+Model.ChildImage2)" width="250" height="150" />

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ChildImage3, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <input type="file" name="ImageFile" id="Image" /><br />
            <img src="@Url.Content("~/Content/HinhAnhSP/"+Model.ChildImage3)" width="250" height="150" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ChildImage4, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <input type="file" name="ImageFile" id="Image" /><br />
            <img src="@Url.Content("~/Content/HinhAnhSP/"+Model.ChildImage4)" width="250" height="150" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.InventoryCount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.InventoryCount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.InventoryCount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ViewCount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.ViewCount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ViewCount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VoteCount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.VoteCount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VoteCount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CommentCount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.CommentCount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CommentCount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PurchaseCount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.PurchaseCount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PurchaseCount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsNewProduct, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.IsNewProduct, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IsNewProduct, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SupplierId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownList("SupplierId", null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ManufacturerId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownList("ManufacturerId", null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ManufacturerId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DropDownList("CategoryId", null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.IsDeleted, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Cập nhật" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
